
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Plus } from "lucide-react";
import Link from "next/link";
import Image from "next/image";

const mockTours = [
  {
    id: 1,
    name: "Kh√°m Ph√° Th√†nh Ph·ªë Tokyo - H√†nh Tr√¨nh Qua VƒÉn H√≥a Nh·∫≠t B·∫£n Hi·ªán ƒê·∫°i",
    description: "Kh√°m ph√° nh·ªØng con ph·ªë s√¥i ƒë·ªông c·ªßa Tokyo c√πng h∆∞·ªõng d·∫´n vi√™n ƒë·ªãa ph∆∞∆°ng chuy√™n nghi·ªáp. Tr·∫£i nghi·ªám vƒÉn h√≥a ƒë·ªôc ƒë√°o t·ª´ khu ph·ªë c·ªï Asakusa ƒë·∫øn qu·∫≠n Shibuya hi·ªán ƒë·∫°i, th∆∞·ªüng th·ª©c ·∫©m th·ª±c truy·ªÅn th·ªëng v√† t√¨m hi·ªÉu l·ªãch s·ª≠ phong ph√∫ c·ªßa th·ªß ƒë√¥ Nh·∫≠t B·∫£n.",
    duration: "8 gi·ªù",
    maxGuests: 12,
    price: 89,
    status: "active",
    location: "Tokyo, Nh·∫≠t B·∫£n",
    image: "https://images.unsplash.com/photo-1540959733332-eab4deabeeaf?w=1000&h=1000&fit=crop&crop=center",
  },
  {
    id: 2,
    name: "D·∫°o B∆∞·ªõc L·ªãch S·ª≠ Paris - Kh√°m Ph√° Th√†nh Ph·ªë √Ånh S√°ng",
    description: "ƒêi b·ªô qua nhi·ªÅu th·∫ø k·ª∑ l·ªãch s·ª≠ v√† vƒÉn h√≥a Paris v·ªõi nh·ªØng c√¢u chuy·ªán h·∫•p d·∫´n v·ªÅ c√°c di t√≠ch n·ªïi ti·∫øng. T·ª´ th√°p Eiffel h√πng vƒ© ƒë·∫øn b·∫£o t√†ng Louvre danh ti·∫øng, kh√°m ph√° nh·ªØng b√≠ m·∫≠t ·∫©n gi·∫•u trong t·ª´ng con ph·ªë c·ªï k√≠nh v√† th∆∞·ªüng th·ª©c kh√¥ng kh√≠ l√£ng m·∫°n ƒë·∫∑c tr∆∞ng c·ªßa th·ªß ƒë√¥ n∆∞·ªõc Ph√°p.",
    duration: "6 gi·ªù",
    maxGuests: 15,
    price: 75,
    status: "active",
    location: "Paris, Ph√°p",
    image: "https://images.unsplash.com/photo-1431274172761-fca41d930114?w=1000&h=1000&fit=crop&crop=center",
  },
  {
    id: 3,
    name: "Phi√™u L∆∞u ·∫®m Th·ª±c Bangkok - H√†nh Tr√¨nh Kh√°m Ph√° H∆∞∆°ng V·ªã Th√°i Lan",
    description: "Th∆∞·ªüng th·ª©c m√≥n ƒÉn Th√°i ch√≠nh th·ªëng t·ª´ ƒë·ªì ƒÉn ƒë∆∞·ªùng ph·ªë ƒë·∫øn nh√† h√†ng cao c·∫•p trong m·ªôt cu·ªôc phi√™u l∆∞u ·∫©m th·ª±c ƒë·∫ßy th√∫ v·ªã. Kh√°m ph√° c√°c khu ch·ª£ ƒë·ªãa ph∆∞∆°ng, h·ªçc c√°ch ch·∫ø bi·∫øn m√≥n ƒÉn truy·ªÅn th·ªëng v√† tr·∫£i nghi·ªám h∆∞∆°ng v·ªã ƒëa d·∫°ng c·ªßa ·∫©m th·ª±c Th√°i Lan c√πng nh·ªØng c√¢u chuy·ªán vƒÉn h√≥a ƒë·ªôc ƒë√°o.",
    duration: "5 gi·ªù",
    maxGuests: 8,
    price: 65,
    status: "draft",
    location: "Bangkok, Th√°i Lan",
    image: "https://images.unsplash.com/photo-1596436889106-be35e843f974?w=1000&h=1000&fit=crop&crop=center",
  },
  {
    id: 4,
    name: "Ngh·ªá Thu·∫≠t & VƒÉn H√≥a New York - Trung T√¢m S√°ng T·∫°o Th·∫ø Gi·ªõi",
    description: "Kh√°m ph√° b·∫£o t√†ng, ph√≤ng tr∆∞ng b√†y v√† c√°c ƒë·ªãa danh vƒÉn h√≥a n·ªïi ti·∫øng nh·∫•t c·ªßa New York. T·ª´ Metropolitan Museum of Art ƒë·∫øn MoMA, t·ª´ Broadway ƒë·∫øn Greenwich Village, tr·∫£i nghi·ªám s·ª± ƒëa d·∫°ng ngh·ªá thu·∫≠t v√† vƒÉn h√≥a c·ªßa th√†nh ph·ªë kh√¥ng ng·ªß v·ªõi nh·ªØng c√¢u chuy·ªán h·∫•p d·∫´n v·ªÅ l·ªãch s·ª≠ v√† s·ª± ph√°t tri·ªÉn c·ªßa ngh·ªá thu·∫≠t hi·ªán ƒë·∫°i.",
    duration: "7 gi·ªù",
    maxGuests: 10,
    price: 95,
    status: "active",
    location: "New York, M·ªπ",
    image: "https://images.unsplash.com/photo-1496442226666-8d4d0e62e6e9?w=1000&h=1000&fit=crop&crop=center",
  },
  {
    id: 5,
    name: "Di S·∫£n Ho√†ng Gia London - H√†nh Tr√¨nh Qua L·ªãch S·ª≠ Ho√†ng Gia Anh",
    description: "Tham quan cung ƒëi·ªán, l√¢u ƒë√†i v√† t√¨m hi·ªÉu v·ªÅ ho√†ng gia Anh qua nhi·ªÅu th·∫ø k·ª∑ l·ªãch s·ª≠ huy ho√†ng. Kh√°m ph√° Cung ƒëi·ªán Buckingham, Th√°p London, v√† Westminster Abbey v·ªõi nh·ªØng c√¢u chuy·ªán th√∫ v·ªã v·ªÅ c√°c v·ªã vua v√† ho√†ng h·∫≠u n·ªïi ti·∫øng. Tr·∫£i nghi·ªám truy·ªÅn th·ªëng vƒÉn h√≥a Anh v√† t√¨m hi·ªÉu v·ªÅ vai tr√≤ c·ªßa ho√†ng gia trong x√£ h·ªôi hi·ªán ƒë·∫°i.",
    duration: "9 gi·ªù",
    maxGuests: 20,
    price: 110,
    status: "inactive",
    location: "London, Anh",
    image: "https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?w=1000&h=1000&fit=crop&crop=center",
  },
];
const getStatusBadge = (status: string) => {
  switch (status) {
    case "active":
      return <Badge variant="default" className="bg-green-500 hover:bg-green-600">Ho·∫°t ƒë·ªông</Badge>;
    case "inactive":
      return <Badge variant="secondary" className="bg-gray-500 hover:bg-gray-600">Kh√¥ng ho·∫°t ƒë·ªông</Badge>;
    case "draft":
      return <Badge variant="outline" className="border-orange-500 text-orange-600">B·∫£n nh√°p</Badge>;
    default:
      return <Badge variant="outline">{status}</Badge>;
  }
};

export default async function Tours() {
  return (
    <main>
      <div className="flex justify-between items-center mb-8">
        <div>
          <h1 className="text-3xl font-bold">B·∫£ng ƒêi·ªÅu Khi·ªÉn Tour</h1>
          <p className="text-muted-foreground mt-2">Qu·∫£n l√Ω c√°c tour du l·ªãch v√† t·∫°o tr·∫£i nghi·ªám m·ªõi</p>
        </div>
        <Button asChild>
          <Link href="/tours/create">
            <Plus className="mr-2 h-4 w-4" />
            T·∫°o Tour
          </Link>
        </Button>
      </div>

      {/* Tours Table */}
      <div className="bg-white rounded-lg shadow-sm border">
          <Table className="w-full ">
            <TableHeader>
              <TableRow>
                <TableHead className="w-[20%] text-lg font-bold p-6">H√¨nh ·∫£nh</TableHead>
                <TableHead className="w-[60%] text-lg font-bold p-6">Chi ti·∫øt Tour</TableHead>
                <TableHead className="w-[10%] text-right text-lg font-bold p-6">Gi√°</TableHead>
                <TableHead className="w-[10%] text-center text-lg font-bold p-6">Tr·∫°ng th√°i</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {mockTours.map((tour) => (
                <TableRow key={tour.id} className="hover:bg-gray-50 cursor-pointer">
                  <TableCell className="p-6 w-[20%]">
                    <div className="relative w-full h-48 rounded-lg overflow-hidden">
                      <Image
                        src={tour.image}
                        alt={tour.name}
                        fill
                        className="object-cover"
                        sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
                      />
                    </div>
                  </TableCell>
                  <TableCell className="p-6 w-[60%] min-w-0">
                    <div className="space-y-3 min-w-0">
                      <h3 className="font-bold text-xl text-gray-900 leading-tight">{tour.name}</h3>
                      <p className="text-gray-600 text-base leading-relaxed w-full bg-red-50 text-ellipsis whitespace-normal">{tour.description}</p>
                      <div className="flex items-center gap-6 text-gray-500 pt-2 flex-wrap">
                        <span className="break-words">üìç {tour.location}</span>
                        <span className="break-words">‚è±Ô∏è {tour.duration}</span>
                        <span className="break-words">üë• T·ªëi ƒëa {tour.maxGuests} kh√°ch</span>
                      </div>
                    </div>
                  </TableCell>
                  <TableCell className="p-6 text-right w-[10%]">
                    <div className="font-semibold text-xl text-gray-900">${tour.price}</div>
                    <div className=" text-gray-500">m·ªói ng∆∞·ªùi</div>
                  </TableCell>
                  <TableCell className="p-6 text-center w-[10%]">
                    {getStatusBadge(tour.status)}
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>

      </div>
    </main>
  );
}